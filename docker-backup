#!/bin/bash

backup() {
    echo "[INFO] Copying directories and files to their destination..."

    rsync -av $origin $destination

    echo ""
}

checkDependencies() {
    dependencies=("docker" "rsync")

    for dep in "${dependencies[@]}"; do
        if [ ! "$(command -v "$dep")" ]; then
            fatal "[ERROR] Command $dep not installed."
        fi
    done

    if [ $EUID != 0 ]; then
        fatal "[ERROR] Sudo privileges required."
    fi
}

fatal() {
    echo "$@" >&2
    kill -10 $proc
}

notify() {
    curl \
        -H "Title: $1" \
        -d "$2" \
        "$3"
}

startContainers() {
    echo "[INFO] Starting containers..."

    for container in $containers; do
        docker start $container
    done

    echo ""
}

stopContainers() {
    echo "[INFO] Stopping containers..."

    for container in $containers; do
        docker stop $container
    done

    echo ""
}

proc=$$
trap 'exit 1' SIGUSR1

checkDependencies

hostname=$(hostname)
containers=$(docker ps --format "{{.Names}}")

while getopts 'd:o:h' arg; do
		case $arg in
			d)
                destination=$OPTARG
            ;;
            o)
                origin=$OPTARG
            ;;
            h)
            exit 2
            ;;
            *)
            exit 2
            ;;
    esac
done

if [ -z "$origin" ]; then
    fatal "[ERROR] Origin path not provided."
elif [ -z "$destination" ]; then
    fatal "[ERROR] Destination path not provided."
fi

hostname=$(hostname)
containers=$(docker ps --format "{{.Names}}")

stopContainers

backup \
    && notify "${hostname^}" "$origin: Backup completed." "ntfy.io/chronos" \
    || notify "${hostname^}" "$origin: Backup failed." "ntfy.io/chronos"
    
startContainers
